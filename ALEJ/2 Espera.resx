<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="NavBar.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Registro.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Archivo.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="SubirReporte.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="REspera.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Inicio.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="panelLogo.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>